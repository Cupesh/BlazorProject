@page "/employees"

@using BlazorProject.Client.HttpRepository
@using BlazorProject.Client.Models
@inject HttpClient Http
@inject IEmployeesHttpRepository EmployeesHttpRepo
@inject NavigationManager NavManager

<h3>Employees</h3>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary" @onclick="AddEmployee">Add Employee</button>
    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.Id</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td><button class="btn btn-primary" @onclick="() => ViewEdit(employee.Id)">View/Edit</button></td>
                    <td><button class="del btn btn-primary" @onclick="() => DeleteEmployee(employee.Id)">X</button></td>
                </tr>
            }
        </tbody>
    </table>
    <style>
        .del {
            color: black;
            background-color: red;
        }

            .del:hover {
                background-color: darkred;
            }
    </style>
}

@code
{
    List<Models.Employee> employees;
    Models.Employee employee;

    protected override async Task OnInitializedAsync()
    {
        var result = await EmployeesHttpRepo.GetAll();

        employees = result.ToList();
    }

    private void ViewEdit(int id)
    {
        NavManager.NavigateTo("/employee/" + id);
    }

    private async Task DeleteEmployee(int id)
    {
        await EmployeesHttpRepo.DeleteOne(id);
        await OnInitializedAsync();
    }

    private void AddEmployee()
    {
        NavManager.NavigateTo("/newemployee");
    }
}
